@{
    ViewBag.Title = "Recicle";
}
<style>
    body {
        background-image: url('https://i.imgur.com/xLWdNFc.jpg');
        background-size: cover; /* Asigură că imaginea de fundal se întinde pentru a acoperi întreaga suprafață a paginii */
        background-position: center;
        background-attachment: fixed; /* Face ca imaginea de fundal să rămână fixă în timpul scroll-ului */
    } 


    .titlu {
        font-family: 'Dancing Script', cursive;
        text-align: center;
        font-size: 40px;
        padding-bottom: 30px;
    }

    .text{
        font-family: 'Dancing Script', cursive;
        font-size: 20px;
        text-align: center;
    }
    .butoane_reciclare{
        text-align: center; /* Aliniați butoanele la centru orizontal */
    }

    /* .butoane_reciclare  */.btn {
        background-color: #EBEBE9;
        color: black;
        border: 2px solid transparent;
        border-radius: 8px; /* Marginile butoanelor rotunjite */
        padding: 12px 24px; /* Ajustați dimensiunile padding-ului pentru a mări butoanele */
        margin: 8px; /* Spațiul dintre butoane */
        font-size: 18px; /* Mărimea textului butoanelor */
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
    }

/*     #myLocationButton.btn:hover {
        background-color: #9e002b; /* Setează culoarea de fundal la roșu la hover */
/*     } */

/*     #myLocationButton.btn:active {
        background-color: #9e002b;
    }  */

/*         .btn:hover {
            background-color: #f0f0f0;
        } */
</style>
<div class="titlu">Don't forget to recicle!</div>

<div class="text">Select your recicle centers for paper, glass, metal and plastic.</div>

@* <button id="myLocationButton" class="btn btn-primary">My Location</button>
 *@<br />
<br />
@* <div class="butoane_reciclare">
<button id="paperButton" class="btn" style="background-color: royalblue; color: black;">Paper</button>
<button id="plasticButton" class="btn" style="background-color: darkkhaki; color: black;">Plastic</button>
<button id="glassButton" class="btn" style="background-color: mediumseagreen; color: black;">Glass</button>
<button id="metalButton" class="btn" style="background-color: lightcoral; color: black;">Metal</button>
</div> *@

<div class="butoane_reciclare">
    <button id="myLocationButton" class="btn btn-primary">My Location</button>
    <button id="paperButton" class="btn btn-primary">Paper</button>
    <button id="plasticButton" class="btn btn-warning">Plastic</button>
    <button id="glassButton" class="btn btn-success">Glass</button>
    <button id="metalButton" class="btn btn-danger">Metal</button>
</div>
<br />
<!-- Includeți fișierele JavaScript pentru Bootstrap (opțional) -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
@* <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script> *@
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<div id="map" style="height: 500px;"></div>

@section scripts {
    <script>
        var map;
        var paperMarkers = []; // Array pentru a retine marker-urile pentru hartie
        var plasticMarkers = []; // Array pentru a retine marker-urile pentru plastic
        var glassMarkers = []; // Array pentru a retine marker-urile pentru sticla
        var metalMarkers = []; // Array pentru a retine marker-urile pentru metal

        // Funcția care va fi apelată atunci când utilizatorul apasă butonul "My Location"
        function getUserLocation() {
            // Verifică dacă navigator.geolocation este disponibil în browser-ul utilizatorului
            if (navigator.geolocation) {
                // Solicită locația utilizatorului
                navigator.geolocation.getCurrentPosition(function (position) {
                    // Extrage coordonatele latitudine și longitudine
                    var userLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    // Afișează locația utilizatorului pe hartă
                    map.setCenter(userLocation);

                    // Adaugă un marcator pentru locația utilizatorului
                    var userMarker = new google.maps.Marker({
                        position: userLocation,
                        map: map,
                        title: 'My Location'
                    });
                }, function (error) {
                    // În cazul în care apare o eroare la obținerea locației
                    console.error("Eroare la obținerea locației:", error);
                });
            } else {
                // În cazul în care navigator.geolocation nu este disponibil
                console.error("Geolocation nu este suportat de browser-ul utilizatorului");
            }
        }

        // Functia care va fi apelata atunci cand utilizatorul apasa butonul "Paper"
        function getPaperLocation() {
            clearMarkersPaper();
            // Defineste locatiile pentru hartie
            var paperLocations = [
                { lat: 44.43225, lng: 26.10626 },
                { lat: 44.3821351, lng: 26.1534615 }
                // Adaugati alte locatii pentru hartie aici, daca este nevoie
            ];

            // Afiseaza locatiile pe harta
            paperLocations.forEach(function (location) {
                var paperMarker = new google.maps.Marker({
                    position: location,
                    map: map,
                    title: 'Paper',
                    icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
                });
                paperMarkers.push(paperMarker);
            });
        }

        // Functia care va fi apelata atunci cand utilizatorul apasa butonul "Plastic"
        function getPlasticLocation() {
            clearMarkersPlastic();
            // Defineste locatiile pentru plastic
            var plasticLocations = [
                { lat: 44.4083471, lng: 26.1399083 },
                { lat: 44.4089996, lng: 26.1969409 }
                // Adaugati alte locatii pentru plastic aici, daca este nevoie
            ];

            // Afiseaza locatiile pe harta
            plasticLocations.forEach(function (location) {
                var plasticMarker = new google.maps.Marker({
                    position: location,
                    map: map,
                    title: 'Plastic',
                    icon: 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'
                });
                plasticMarkers.push(plasticMarker);
            });
        }

        // Functia care va fi apelata atunci cand utilizatorul apasa butonul "Glass"
        function getGlassLocation() {
            clearMarkersGlass();
            // Defineste locatiile pentru sticla
            var glassLocations = [
                { lat: 44.4636665, lng: 26.109916 },
                { lat: 44.4759096, lng: 26.1790872 }
                // Adaugati alte locatii pentru sticla aici, daca este nevoie
            ];

            // Afiseaza locatiile pe harta
            glassLocations.forEach(function (location) {
                var glassMarker = new google.maps.Marker({
                    position: location,
                    map: map,
                    title: 'Glass',
                    icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'
                });
                glassMarkers.push(glassMarker);
            });
        }

        // Functia care va fi apelata atunci cand utilizatorul apasa butonul "Metal"
        function getMetalLocation() {
            clearMarkersMetal();
            // Defineste locatiile pentru metal
            var metalLocations = [
                { lat: 44.4289447, lng: 26.0351844 },
                { lat: 44.3843606, lng: 26.0595703 }
                // Adaugati alte locatii pentru metal aici, daca este nevoie
            ];

            // Afiseaza locatiile pe harta
            metalLocations.forEach(function (location) {
                var metalMarker = new google.maps.Marker({
                    position: location,
                    map: map,
                    title: 'Metal',
                    icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'
                });
                metalMarkers.push(metalMarker);
            });
        }

        // Funcția de inițializare a hărții
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 44.43225, lng: 26.10626 }, // Bucuresti centru
                zoom: 12,
                styles: [
                    {
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#333333"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.text.stroke",
                        "stylers": [
                            {
                                "color": "#ffffff"
                            }
                        ]
                    },
                    {
                        "featureType": "administrative",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "color": "#c9c9c9"
                            }
                        ]
                    },
                    {
                        "featureType": "administrative.land_parcel",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "color": "#dcdcdc"
                            }
                        ]
                    },
                    {
                        "featureType": "administrative.province",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    },
                    {
                        "featureType": "landscape.natural",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#333333"
                            }
                        ]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#333333"
                            }
                        ]
                    },
                    {
                        "featureType": "road",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#ffffff"
                            }
                        ]
                    },
                    {
                        "featureType": "road",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#333333"
                            }
                        ]
                    },
                    {
                        "featureType": "road.arterial",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "color": "#d6d6d6"
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "color": "#d6d6d6"
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway.controlled_access",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#ffffff"
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway.controlled_access",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "color": "#d6d6d6"
                            }
                        ]
                    },
                    {
                        "featureType": "road.local",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#333333"
                            }
                        ]
                    },
                    {
                        "featureType": "transit.line",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#ffffff"
                            }
                        ]
                    },
                    {
                        "featureType": "transit.station",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#ffffff"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#a0d6f7"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#333333"
                            }
                        ]
                    }
                ]
            });
        }

        // Apelează funcția de inițializare a hărții când se încarcă pagina
        window.onload = function () {
            initMap();

            // Adaugă un eveniment de click pentru butonul "My Location"
            document.getElementById('myLocationButton').addEventListener('click', function () {
                getUserLocation();
            });

            // Adaugă un eveniment de click pentru butonul "Paper"
            document.getElementById('paperButton').addEventListener('click', function () {
                if (paperMarkers.length > 0) {
                    clearMarkersPaper();
                } else {
                    getPaperLocation();
                }
            });

            // Adaugă un eveniment de click pentru butonul "Plastic"
            document.getElementById('plasticButton').addEventListener('click', function () {
                if (plasticMarkers.length > 0) {
                    clearMarkersPlastic();
                } else {
                    getPlasticLocation();
                }
            });

            // Adaugă un eveniment de click pentru butonul "Glass"
            document.getElementById('glassButton').addEventListener('click', function () {
                if (glassMarkers.length > 0) {
                    clearMarkersGlass();
                } else {
                    getGlassLocation();
                }
            });

            // Adaugă un eveniment de click pentru butonul "Metal"
            document.getElementById('metalButton').addEventListener('click', function () {
                if (metalMarkers.length > 0) {
                    clearMarkersMetal();
                } else {
                    getMetalLocation();
                }
            });
        };

        // Functie pentru a sterge toate marker-urile de pe harta
        function clearMarkersPaper() {
            paperMarkers.forEach(function (marker) {
                marker.setMap(null);
            });
            paperMarkers = []; // Goleste array-ul de marker-e
        }

        function clearMarkersPlastic() {
            plasticMarkers.forEach(function (marker) {
                marker.setMap(null);
            });
            plasticMarkers = []; // Goleste array-ul de marker-e
        }

        function clearMarkersGlass() {
            glassMarkers.forEach(function (marker) {
                marker.setMap(null);
            });
            glassMarkers = []; // Goleste array-ul de marker-e
        }

        function clearMarkersMetal() {
            metalMarkers.forEach(function (marker) {
                marker.setMap(null);
            });
            metalMarkers = []; // Goleste array-ul de marker-e
        }

    </script>
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAELmgwwCD6Zk66yg1D963hesjNg7IadMY&callback=initMap" async defer></script>
}
